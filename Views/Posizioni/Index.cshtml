@model IEnumerable<poligono.Models.Posizioni>
@using System.Text.RegularExpressions
@using System.Globalization
@using System.Text
@using System.Security.Cryptography;
@{
    ViewBag.Title = "Index";
}
<link rel="stylesheet" href="http://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
      integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
      crossorigin="" />
<!-- Make sure you put this AFTER Leaflet's CSS -->
<script src="http://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
        integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
        crossorigin=""></script>
<h2>Index</h2>
<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Lat)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Lon)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td id="Lat">
                @Html.DisplayFor(modelItem => item.Lat)
            </td>
            <td id="Lon">
                @Html.DisplayFor(modelItem => item.Lon)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }
</table>
@{
    string x;
    string y;
    string z;
    string[] punti = new string[3];
    int i = 0;
    //int j = 0;
    //Console.WriteLine(i);
    foreach (var item in Model)
    {
        x = item.Lat.ToString().Replace(",", ".");
        y = item.Lon.ToString().Replace(",", ".");
        z = "[" + x + ", " + y + "]";
        Console.Write(x);
        Console.Write(y);
        Console.Write(z);
        punti[i] = z;
        Console.Write(punti);
        i++;
    };
    Console.WriteLine(i);
    Console.WriteLine(punti);
    string puntiStr = "";
    i = 0;
    foreach(var item in punti)
    {
        string text = punti[i];
        puntiStr = puntiStr + text + ", ";
        i++;
    }
    Console.WriteLine(puntiStr);
    //Console.WriteLine(z);
    //string coordinata = "[45.4502977, 9.1675544]";
}
<div id="mapid"></div>
<style>
    #mapid {
        height: 1080px;
    }
</style>
<script src="http://www.openlayers.org/api/OpenLayers.js"></script>
<script type="text/javascript">
    var puntijs = [@puntiStr];
    var mymap = L.map('mapid').setView([45.4502977, 9.1675544], 13);
    //var OsmLayer = new OpenLayers.Map("Mappa");
    L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}', {
        attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
        maxZoom: 18,
        id: 'mapbox/streets-v11',
        accessToken: 'pk.eyJ1Ijoia2lyb2xvc21hdGVyIiwiYSI6ImNqdzNxMXdtZzE5d2MzeXBndGd4YTh3dGMifQ.YW8rFAPQyZYz0ylkcqsk-g'
    }).addTo(mymap);
    var polygon = L.polygon([
        puntijs
    ]).addTo(mymap);
</script>
@*<div id="Mappa"></div>
    <script src="http://www.openlayers.org/api/OpenLayers.js"></script>
    <script type="text/javascript">
        //alert("sono visibile");
        Mappa = new OpenLayers.Map("Mappa");
        Mappa.addLayer(new OpenLayers.Layer.OSM());

        // Creo l'oggetto contenente le coordinate (prima longitudine e poi latitudine)
        var LonLat = new OpenLayers.LonLat(12.492347, 41.890183)
            .transform(
                new OpenLayers.Projection("EPSG:4326"), // Transformazione da WGS 1984..
                Mappa.getProjectionObject() // .. a Spherical Mercator Projection
            );

        // Imposto lo zoom
        var zoom = 16;

        // Creo una variabile contenete il layer dei marker poi collego il layer dei markers alla mappa
        var LayerMarkers = new OpenLayers.Layer.Markers("Markers");
        Mappa.addLayer(LayerMarkers);

        // Aggiungo al layer dei marker un marker (utilizzando l'oggetto lonLat per le coordinate)
        LayerMarkers.addMarker(new OpenLayers.Marker(LonLat));


        // Imposto le coordinate di lonLat come centro della mappa di partenza
        Mappa.setCenter(LonLat, zoom);
    </script>
    <style>
        #Mappa {
            width: 1000px;
            height: 1000px;
        }
    </style>*@
